# -*- mode: ruby -*-
# vim: set ft=ruby :

BOX_NAME = "generic/debian10";

IP_ZBX5_DB  = "192.168.50.10";
IP_ZBX5_SRV = "192.168.50.20";
IP_ZBX5_WEB = "192.168.50.30";
NET_MASK_24 = "255.255.255.0";

VB_PREFIX = "otus-monlog-les03-";
VB_NET_A = VB_PREFIX + "intnet-A";

HOSTS = {
#=begin
    :"zbx5-db" => {
        :box_name => BOX_NAME,
        :cpu => '1',
        :ram => "512",
        :net => [
            {adapter: 2, ip: IP_ZBX5_DB, netmask: NET_MASK_24, virtualbox__intnet: VB_NET_A},
        ],
        :port => []
    },

    :"zbx5-srv" => {
        :box_name => BOX_NAME,
        :cpu => '1',
        :ram => "512",
        :net => [
            {adapter: 2, ip: IP_ZBX5_SRV, netmask: NET_MASK_24, virtualbox__intnet: VB_NET_A},
        ],
        :port => []
    },
#=end
    :"zbx5-web" => {
        :box_name => BOX_NAME,
        :cpu => '1',
        :ram => "512",
        :net => [
            {adapter: 2, ip: IP_ZBX5_WEB, netmask: NET_MASK_24, virtualbox__intnet: VB_NET_A},
        ],
        :port => [
            {guest: 80, host: 8080},
            {guest: 443, host: 8081}
        ]
    }

}

Vagrant.configure("2") do |config|

    config.ssh.insert_key = false

    HOSTS.each do |host, hostconfig|

        config.vm.define host do |box|
            box.vm.box = hostconfig[:box_name]
            box.vm.host_name = host.to_s

            hostconfig[:net].each do |ipconf|
                box.vm.network "private_network", ipconf
            end
            hostconfig[:port].each do |portconf|
                box.vm.network "forwarded_port", portconf
            end

            box.vm.provider :virtualbox do |vb|
                # Иногда выполнение команды vagrant up
                # зависает на: SSH auth method: private key
                vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
                vb.cpus = hostconfig[:cpu]
                vb.memory = hostconfig[:ram]
                vb.name = VB_PREFIX + host.to_s
            end
=begin
            box.vm.provision "ansible" do |ansible|
                ansible.playbook = "playbooks/playbook.yml"
            end
=end
        end

    end
end
