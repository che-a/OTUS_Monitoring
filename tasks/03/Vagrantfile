# -*- mode: ruby -*-
# vim: set ft=ruby :

BOX_NAME = "generic/debian10";
VB_PREFIX = "otus-monlog-les03-";
VB_NET_A = VB_PREFIX + "intnet-A";

HOSTS = {
    :"zbx5-db" => {
        :box_name => BOX_NAME,
        :cpu => '1',
        :ram => "512",
        :net => [
            {adapter: 2, ip: "192.168.50.10", netmask: 24, virtualbox__intnet: VB_NET_A},
        ],
        :port => [
            {guest: 80, host: 8082},
            {guest: 443, host: 8092}
        ]
    },

    :"zbx5-srv" => {
        :box_name => BOX_NAME,
        :cpu => '1',
        :ram => "512",
        :net => [
            {adapter: 2, ip: "192.168.50.20", netmask: 24, virtualbox__intnet: VB_NET_A},
        ],
        :port => [
            {guest: 80, host: 8081},
            {guest: 443, host: 8091}]
    },

    :"zbx5-web" => {
        :box_name => BOX_NAME,
        :cpu => '1',
        :ram => "512",
        :net => [
            {adapter: 2, ip: "192.168.50.30", netmask: 24, virtualbox__intnet: VB_NET_A},
        ],
        :port => [
            {guest: 80, host: 8080},
            {guest: 443, host: 8090}
        ]
    },

    :"ctrl" => {
        :box_name => BOX_NAME,
        :cpu => '1',
        :ram => "512",
        :net => [
            {adapter: 2, ip: "192.168.50.100", netmask: 24, virtualbox__intnet: VB_NET_A},
        ],
        :port => [],
        :is_ansible_server => true
    }
}

Vagrant.configure("2") do |config|

    HOSTS.each do |host, hostconfig|

        config.vm.define host do |box|
            box.vm.box = hostconfig[:box_name]
            box.vm.host_name = host.to_s

            hostconfig[:net].each do |ipconf|
                box.vm.network "private_network", ipconf
            end
            hostconfig[:port].each do |portconf|
                box.vm.network "forwarded_port", portconf
            end

            box.vm.provider :virtualbox do |vb|
                vb.cpus = hostconfig[:cpu]
                vb.memory = hostconfig[:ram]
                vb.name = VB_PREFIX + "%s" % host
            end

            if (hostconfig[:is_ansible_server] == true)
                box.vm.provision "file", source: "ansible", destination: "$HOME"
                box.vm.provision "file", source: "files/ssh_client_config", destination: "$HOME/.ssh/config"
                box.vm.provision "shell", run: "always", inline: <<-SHELL
                    sudo apt-get update -y && sudo apt-get upgrade
                    sudo apt-get install -y ansible ansible-lint htop sshpass tmux tree

                    # Установка корректного часового пояса
                    sudo timedatectl set-timezone Europe/Moscow

                    # Установка русской локали
                    sudo echo "locales locales/default_environment_locale select ru_RU.UTF-8" | sudo debconf-set-selections
                    sudo echo "locales locales/locales_to_be_generated multiselect ru_RU.UTF-8 UTF-8" | sudo debconf-set-selections
                    sudo rm "/etc/locale.gen"
                    sudo dpkg-reconfigure --frontend noninteractive locales

                    # Использование имен серверов вместо IP-адресов
                    echo "192.168.50.10  zbx5-db" >> /etc/hosts
                    echo "192.168.50.20  zbx5-srv" >> /etc/hosts
                    echo "192.168.50.30  zbx5-web" >> /etc/hosts

                    # Настройка SSH-подключения по сертификатам вместо использования пароля
                    runuser -l vagrant -c "ssh-keygen -t rsa -N '' -b 2048 -f /home/vagrant/.ssh/vagrant@ctrl"
                    runuser -l vagrant -c "sshpass -p vagrant ssh-copy-id -i /home/vagrant/.ssh/vagrant@ctrl zbx5-db"
                    runuser -l vagrant -c "sshpass -p vagrant ssh-copy-id -i /home/vagrant/.ssh/vagrant@ctrl zbx5-srv"
                    runuser -l vagrant -c "sshpass -p vagrant ssh-copy-id -i /home/vagrant/.ssh/vagrant@ctrl zbx5-web"

                    # Создание TLS-сертификатов для веб-сервера (nginx)
                    openssl req -x509 -nodes -days 3650 -newkey rsa:2048 \
                        -subj /CN=localhost \
                        -keyout /home/vagrant/files/nginx.key \
                        -out /home/vagrant/files/nginx.crt

                    chown vagrant:vagrant /home/vagrant/files/nginx.{key,crt}

                    reboot
                SHELL
            end
        end

    end
end
